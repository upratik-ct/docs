This code defines a function `evaluate_ai_docstring` that evaluates the quality of an AI-generated docstring for a given function. Here's a breakdown of what the code does:
import inspect

def evaluate_ai_docstring(func, ai_docstring):
    param_score = 0
    return_score = 0
    purpose_score = 0
    accuracy_score = 0

    func_signature = inspect.signature(func)

    # Check for parameter presence and basic type hints in docstring
    for param_name, param_obj in func_signature.parameters.items():
        if f"{param_name} (" in ai_docstring:
            param_score += 0.25
        if param_obj.annotation != inspect.Parameter.empty and str(param_obj.annotation) in ai_docstring:
            param_score += 0.25

    # Check for return type presence and basic hint in docstring
    if func_signature.return_annotation != inspect.Signature.empty and str(func_signature.return_annotation) in ai_docstring:
        return_score += 0.5
    elif "Returns:" in ai_docstring: # if type hint is missing, just check for the header
        return_score += 0.25

    # Check for purpose description
    if "Calculate" in ai_docstring or "computes" in ai_docstring or "returns" in ai_docstring:
        purpose_score = 1.0

    # Basic accuracy check for return value description - can be expanded
    if "area of the circle" in ai_docstring:
        accuracy_score = 1.0

    overall_score = (param_score + return_score + purpose_score + accuracy_score) / 4
    return overall_score, {
        "param_score": param_score,
        "return_score": return_score,
        "purpose_score": purpose_score,
        "accuracy_score": accuracy_score,
        "overall_score": overall_score
    }

def calculate_area(radius: float) -> float:
    return 3.14159 * radius ** 2

ai_generated_docstring = """
Calculate the area of a circle given its radius.
Args:
    radius (float): The radius of the circle.
Returns:
    float: The area of the circle.
Example:
>>> calculate_area(5)
78.53975
"""

score, details = evaluate_ai_docstring(calculate_area, ai_generated_docstring)

print(f"Docstring Evaluation for 'calculate_area':")
print(f"  Parameter Score: {details['param_score']:.2f}")
print(f"  Return Score: {details['return_score']:.2f}")
print(f"  Purpose Score: {details['purpose_score']:.2f}")
print(f"  Accuracy Score: {details['accuracy_score']:.2f}")
print(f"  Overall Score: {details['overall_score']:.2f}")
